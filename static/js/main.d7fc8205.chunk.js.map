{"version":3,"sources":["styles/colors.ts","components/Navbar.tsx","components/DropFiles.tsx","api/upload.ts","containers/BodyContainer.tsx","App.tsx","index.tsx"],"names":["colors","primary","primaryBright","background","gray","grayBright","Logo","styled","h1","className","GenerateURLButton","button","props","disabled","CopyButton","useState","files","setFiles","key","setKey","loading","setLoading","copied","setCopied","inputRef","useRef","onClick","formData","FormData","forEach","file","append","name","axios","post","uploadFiles","then","res","uuid","data","onCopy","input","current","select","setSelectionRange","document","execCommand","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","length","map","index","Number","size","toFixed","type","color","height","width","style","position","top","htmlFor","id","value","readOnly","ref","Message","h2","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7fc8205.chunk.js","sourcesContent":["const colors = {\n  primary: \"#F2AA4C\",\n  primaryBright: \"#F5BB70\",\n  background: \"#101820\",\n  gray: \"#979797\",\n  grayBright: \"#ACACAC\",\n};\n\nexport default colors;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles/colors\";\ntype NavbarProps = {\n  className?: string;\n};\n\nconst Logo = styled.h1`\n  color: ${colors.primary};\n`;\n\nconst Navbar: React.FC<NavbarProps> = ({ className }) => {\n  return (\n    <div className={className}>\n      <nav>\n        <Logo>DISP.URL</Logo>\n        <ul className=\"nav-items\">\n          <li className=\"nav-item\">Pricing</li>\n          <li className=\"nav-item\">About</li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default styled(Navbar)`\n  nav {\n    height: 6rem;\n    margin: auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    .nav-items {\n      display: flex;\n      list-style: none;\n      .nav-item {\n        margin-right: 2rem;\n        color: white;\n        font-weight: bold;\n        &:last-child {\n          margin-right: 0;\n        }\n      }\n    }\n  }\n`;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Dropzone from \"react-dropzone\";\nimport Loader from \"react-loader-spinner\";\nimport colors from \"../styles/colors\";\nimport { uploadFiles } from \"../api/upload\";\n\ntype DropFilesProps = {\n  className?: string;\n};\n\nconst GenerateURLButton = styled.button`\n  width: 100%;\n  height: 3rem;\n  border: none;\n  border-radius: 0.25rem;\n  background-color: ${colors.primary};\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  &:hover {\n    background-color: ${colors.primaryBright};\n    cursor: ${(props: React.ButtonHTMLAttributes<HTMLButtonElement>) =>\n      props.disabled ? \"not-allowed\" : \"pointer\"};\n  }\n`;\n\nconst CopyButton = styled.button`\n  height: 100%;\n  padding: 1rem;\n  background-color: ${colors.gray};\n  color: white;\n  border: none;\n  font-weight: bold;\n  &:hover {\n    background-color: ${colors.grayBright};\n    cursor: ${(props: React.ButtonHTMLAttributes<HTMLButtonElement>) =>\n      props.disabled ? \"not-allowed\" : \"pointer\"};\n  }\n`;\n\nconst DropFiles: React.FC<DropFilesProps> = ({ className }) => {\n  const [files, setFiles] = useState<File[]>();\n  const [key, setKey] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const url = \"https://disposable-url.herokuapp.com/upload/\";\n  const onDrop = (acceptedFiles: File[]) => {\n    setFiles(acceptedFiles);\n    console.log(acceptedFiles);\n  };\n  const onClick = () => {\n    if (files) {\n      setLoading(true);\n      uploadFiles(files).then(res => {\n        const { uuid } = res.data;\n        setKey(uuid);\n        setLoading(false);\n        setFiles([]);\n      });\n    }\n  };\n  const onCopy = () => {\n    const input = inputRef.current;\n    if (input) {\n      input.select();\n      input.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      setCopied(true);\n    }\n  };\n  const getFilenames = () => {\n    return (\n      files && (\n        <div className=\"dropzone-file-container\">\n          <h3>Added Files ({files.length} files):</h3>\n          <ul className=\"filename-list\">\n            {files.map((file, index) => (\n              <li className=\"filename-item\" key={index}>\n                <span className=\"filename\">{file.name}</span>\n                <span className=\"file-size\">\n                  {Number(file.size / 1000000).toFixed(1)}MB\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    );\n  };\n  return (\n    <Dropzone onDrop={onDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <section className={className}>\n          <div className=\"dropzone\" {...getRootProps()}>\n            <input {...getInputProps()} />\n            {files && files.length > 0 ? (\n              getFilenames()\n            ) : (\n              <p className=\"drop-message\">Drop your files here.</p>\n            )}\n          </div>\n          <GenerateURLButton\n            onClick={onClick}\n            disabled={!files || files.length <= 0}\n          >\n            {loading ? (\n              <Loader\n                type=\"Circles\"\n                color=\"#FFFFFF\"\n                height={32}\n                width={32}\n                style={{ position: \"relative\", top: \"3px\" }}\n              />\n            ) : (\n              \"Generate URL\"\n            )}\n          </GenerateURLButton>\n          <div className=\"url-container\">\n            <label className=\"url-label\" htmlFor=\"url\">\n              URL:\n            </label>\n            <input\n              id=\"url\"\n              type=\"text\"\n              value={key === \"\" ? \"\" : url + key}\n              readOnly\n              ref={inputRef}\n            />\n            <CopyButton disabled={key === \"\"} onClick={onCopy}>\n              {copied ? \"Copied!\" : \"Copy\"}\n            </CopyButton>\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  );\n};\n\nexport default styled(DropFiles)`\n  .dropzone {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 15rem;\n    margin: auto;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.primary};\n    border-radius: 0.25rem;\n    outline: none;\n    .dropzone-file-container {\n      width: 100%;\n      height: 100%;\n      padding: 1rem;\n      color: white;\n      overflow-y: scroll;\n      .filename-list {\n        width: 100%;\n        padding: 1rem;\n        .filename-item {\n          display: flex;\n          justify-content: space-between;\n          width: 100%;\n          margin-bottom: 0.5rem;\n          .filename {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n          }\n          .file-size {\n            margin-left: 1rem;\n          }\n        }\n      }\n    }\n    .drop-message {\n      font-size: 1.5em;\n      color: ${colors.gray};\n    }\n    &:hover {\n      cursor: pointer;\n    }\n  }\n  .url-container {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 3rem;\n    margin-top: 1rem;\n    border-radius: 0.25rem;\n    background-color: white;\n    overflow: hidden;\n    .url-label {\n      position: absolute;\n      left: 1rem;\n      font-weight: bold;\n    }\n    input {\n      width: 100%;\n      height: 100%;\n      padding-left: 4rem;\n      padding-right: 1rem;\n      border: none;\n      font-size: 1em;\n    }\n  }\n`;\n","import axios from \"axios\";\n\nconst URL = \"https://disposable-url.herokuapp.com/upload\";\n\nexport const uploadFiles = (files: File[]) => {\n  const formData = new FormData();\n  files.forEach((file: File) => {\n    formData.append(\"files\", file);\n    formData.append(\"filenames\", file.name);\n  });\n  return axios.post(URL, formData);\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles/colors\";\nimport { DropFiles } from \"../components\";\n\ntype BodyContainerProps = {\n  className?: string;\n};\n\nconst Message = styled.h2`\n  color: white;\n  text-align: center;\n  .accent {\n    color: ${colors.primary};\n  }\n`;\n\nconst BodyContainer: React.FC<BodyContainerProps> = ({ className }) => {\n  return (\n    <section className={className}>\n      <Message>\n        Share your files with a URL, but with more\n        <span className=\"accent\"> security.</span>\n      </Message>\n      <div className=\"drop-container\">\n        <DropFiles />\n      </div>\n    </section>\n  );\n};\n\nexport default styled(BodyContainer)`\n  margin: auto;\n  margin-top: 6rem;\n  ${Message} {\n    margin-bottom: 4rem;\n  }\n  .drop-container {\n    width: 70%;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport { Navbar } from \"./components\";\nimport { BodyContainer } from \"./containers\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <BodyContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}